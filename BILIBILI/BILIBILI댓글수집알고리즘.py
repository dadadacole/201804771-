# -*- coding: utf-8 -*-
"""비리비리덧글

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VbYsy5eJO6lBptgd4029TFMffZLk6iVJ
"""

## 참조코드: https://www.cnblogs.com/smartcrane/p/13172825.html


import requests
import json
import time

def fetchURL(url):
    '''
    功能：访问 url 的网页，获取网页内容并返回
    参数：
        url ：目标网页的 url
    返回：目标网页的 html 内容
    '''
    headers = {
        'accept': 'text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,image/apng,*/*;q=0.8',
        'user-agent': 'Mozilla/5.0 (Windows NT 10.0; WOW64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/68.0.3440.106 Safari/537.36',
    }

    try:
        r = requests.get(url,headers=headers)
        r.raise_for_status()
        print(r.url)
        return r.text
    except requests.HTTPError as e:
        print(e)
        print("HTTPError")
    except requests.RequestException as e:
        print(e)
    except:
        print("Unknown Error !")


def parserHtml(html):
    '''
    功能：根据参数 html 给定的内存型 HTML 文件，尝试解析其结构，获取所需内容
    参数：
            html：类似文件的内存 HTML 文本对象
    '''
    try:
        s = json.loads(html)
    except:
        print('error')

    commentlist = []
    hlist = []

    hlist.append("序号")
    hlist.append("名字")
    hlist.append("性别")
    hlist.append("时间")
    hlist.append("评论")
    hlist.append("点赞数")
    hlist.append("回复数")

    #commentlist.append(hlist)

    # 楼层，用户名，性别，时间，评价，点赞数，回复数
    for i in range(20):
        try:
          comment = s['data']['replies'][i]
          blist = []

          username = comment['member']['uname']
          sex = comment['member']['sex']
          ctime = time.strftime("%Y-%m-%d %H:%M:%S",time.localtime(comment['ctime']))
          content = comment['content']['message']
          likes = comment['like']
          rcounts = comment['rcount']

          blist.append(username)
          blist.append(sex)
          blist.append(ctime)
          blist.append(content)
          blist.append(likes)
          blist.append(rcounts)

          commentlist.append(blist)

        except:
          print('error')

    writePage(commentlist)
    print('---'*20)

def writePage(urating):
    '''
        Function : To write the content of html into a local file
        html : The response content
        filename : the local filename to be used stored the response
    '''

    import pandas as pd
    dataframe = pd.DataFrame(urating)
    dataframe.to_csv('Bilibili_commentZZZzz.csv', mode='a', encoding ='utf-8-sig', index=False, sep=',', header=False)

비디오고유번호 = 797479639

# 비디오고유번호 확인 방법:
# https://www.bilibili.com/video/BV1o4411j7ts?from=search&seid=12778639342897020237
# 分享 －－　嵌入代码  53175497 / 23320143 / 30964455 /43779403 / 12446613 /15340888 / 4129275 / 14943089/
## <iframe src="//player.bilibili.com/player.html?aid=53175497&bvid=BV1o4411j7ts&cid=130891404&page=1" scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"> </iframe>
## 그 중에서 "?aid=53175497"가 곧 비디오고유번호임.

덧글페이지량 = 40
## 현재 덧글의 총 페이지량 



덧글페이지량 = 덧글페이지량 + 1

if __name__ == '__main__':



    for page in range(0,덧글페이지량):
        url = 'https://api.bilibili.com/x/v2/reply?type=1&oid=' + str(비디오고유번호) + '&pn=' + str(page)
        html = fetchURL(url)
        parserHtml(html)

        # 为了降低被封ip的风险，每爬20页便歇5秒。
        if page%20 == 0:
            time.sleep(5)